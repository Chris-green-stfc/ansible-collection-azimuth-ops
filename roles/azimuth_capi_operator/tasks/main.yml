---

- name: Install Azimuth CAPI operator on target Kubernetes cluster
  kubernetes.core.helm:
    chart_ref: "{{ azimuth_capi_operator_chart_name }}"
    chart_repo_url: "{{ azimuth_capi_operator_chart_repo }}"
    chart_version: "{{ azimuth_capi_operator_chart_version }}"
    release_namespace: "{{ azimuth_capi_operator_release_namespace }}"
    release_name: "{{ azimuth_capi_operator_release_name }}"
    release_values: "{{ azimuth_capi_operator_release_values }}"
    atomic: yes
    create_namespace: yes
    wait: yes
    wait_timeout: "{{ azimuth_capi_operator_wait_timeout }}"

- name: Install Azimuth CAPI cluster templates
  command: kubectl apply -f -
  args:
    stdin: "{{ template_definition | to_nice_yaml }}"
  vars:
    template_definition:
      apiVersion: azimuth.stackhpc.com/v1alpha1
      kind: ClusterTemplate
      metadata:
        name: "{{ template.name }}"
      spec: "{{ template.spec }}"
  loop: >-
    {{-
      azimuth_capi_operator_cluster_templates |
        dict2items(key_name = 'name', value_name = 'spec')
    }}
  loop_control:
    loop_var: template
    label: "{{ template.name }}"

- name: List Azimuth CAPI cluster templates
  command: kubectl get clustertemplates.azimuth.stackhpc.com --output json
  register: azimuth_capi_operator_templates_cmd

- name: Deprecate non-current templates
  command: >-
    kubectl patch
      --type merge
      --patch '{"spec": {"deprecated": true}}'
      clustertemplates.azimuth.stackhpc.com/{{ template_name }}
  loop: >-
    {{-
      azimuth_capi_operator_templates_cmd.stdout |
        from_json |
        json_query('items') |
        map(attribute = 'metadata.name') |
        reject('in', azimuth_capi_operator_cluster_templates.keys())
    }}
  loop_control:
    loop_var: template_name

- name: Install Azimuth CAPI app templates
  command: kubectl apply -f -
  args:
    stdin: "{{ template_definition | to_nice_yaml }}"
  vars:
    template_definition:
      apiVersion: azimuth.stackhpc.com/v1alpha1
      kind: AppTemplate
      metadata:
        name: "{{ template.name }}"
      spec: "{{ template.spec }}"
  loop: >-
    {{-
      azimuth_capi_operator_app_templates |
        dict2items(key_name = 'name', value_name = 'spec')
    }}
  loop_control:
    loop_var: template
    label: "{{ template.name }}"
