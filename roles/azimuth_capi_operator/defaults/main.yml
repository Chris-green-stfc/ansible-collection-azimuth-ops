---

# The chart to use
azimuth_capi_operator_chart_repo: https://stackhpc.github.io/azimuth-capi-operator
azimuth_capi_operator_chart_name: azimuth-capi-operator
azimuth_capi_operator_chart_version: 0.1.0-dev.0.main.75

# Release information for the CAPI operator release
# Use the same namespace as Azimuth by default
azimuth_capi_operator_release_namespace: "{{ azimuth_release_namespace | default('azimuth') }}"
azimuth_capi_operator_release_name: azimuth-capi-operator

# The timeout to wait for CAPI operator to become ready
azimuth_capi_operator_wait_timeout: 10m

# The repo, name and version for the CAPI Helm charts
# Leave blank to use the operator defaults
azimuth_capi_operator_capi_helm_chart_repo:
azimuth_capi_operator_capi_helm_chart_name:
# FIXME: Use capi-helm-chart branch with support for omitting AZs until the code is an a CAPO release
azimuth_capi_operator_capi_helm_chart_version: 0.1.0-dev.0.feature-control-plane-omit-az.169

# The ID of the external network to use if there are multiple external networks
# If specified here, the network MUST be shared by all tenants
# If not given the external network is discovered, which only works if there is exactly
# one external network available to a project
azimuth_capi_operator_external_network_id:

# Indicates the CIDR blocks to use for pods and services of provisioned clusters respectively
# Leave blank for the chart defaults
azimuth_capi_operator_capi_helm_pods_cidr:
azimuth_capi_operator_capi_helm_services_cidr:

# The DNS nameservers for provisioned clusters
# Leave blank for the chart defaults
azimuth_capi_operator_capi_helm_dns_nameservers:

# Bundle of certificates that should be added to the system trustroots for provisioned clusters
# E.g. for pulling containers from a registry with a custom CA chain
azimuth_capi_operator_capi_helm_trust_bundle: "{{ trust_bundle | default({}) }}"
# The registry mirrors for provisioned clusters
azimuth_capi_operator_capi_helm_registry_mirrors: >-
  {{-
    harbor_registry_mirrors
    if harbor_registry_mirrors is defined
    else {}
  }}
# The additional packages for provisioned clusters
azimuth_capi_operator_capi_helm_additional_packages: []


# Indicates whether the failure domain (availability zone) should be omitted from control plane nodes
# Omitting the failure domain allows OpenStack to select a suitable AZ based on other scheduling constraints
azimuth_capi_operator_capi_helm_control_plane_omit_failure_domain: true
# A list of failure domains (availability zones) to consider for control plane nodes
# Only used when azimuth_capi_operator_capi_helm_control_plane_omit_failure_domain = false
# If not given, all availability zones will be considered for control plane nodes
azimuth_capi_operator_capi_helm_control_plane_failure_domains:
# The failure domain (availability zone) to use for workers
# Leave blank to let OpenStack select a suitable AZ based on other scheduling constraints
azimuth_capi_operator_capi_helm_worker_failure_domain:

# The size of the root disks if boot-from-volume is required
# Leave blank to use the root disk from the flavor
azimuth_capi_operator_capi_helm_root_volume_size:
azimuth_capi_operator_capi_helm_control_plane_root_volume_size: "{{ azimuth_capi_operator_capi_helm_root_volume_size }}"
azimuth_capi_operator_capi_helm_worker_root_volume_size: "{{ azimuth_capi_operator_capi_helm_root_volume_size }}"
# The volume type for the root disk
# Leave blank for the default volume type
azimuth_capi_operator_capi_helm_root_volume_type:
azimuth_capi_operator_capi_helm_control_plane_root_volume_type: "{{ azimuth_capi_operator_capi_helm_root_volume_type }}"
azimuth_capi_operator_capi_helm_worker_root_volume_type: "{{ azimuth_capi_operator_capi_helm_root_volume_type }}"
# The Cinder availability zone for the root disk
# If left blank, the compute availability zone for the node will be used
azimuth_capi_operator_capi_helm_root_volume_availability_zone: nova
azimuth_capi_operator_capi_helm_control_plane_root_volume_availability_zone: "{{ azimuth_capi_operator_capi_helm_root_volume_availability_zone }}"
azimuth_capi_operator_capi_helm_worker_root_volume_availability_zone: "{{ azimuth_capi_operator_capi_helm_root_volume_availability_zone }}"

# The Cinder availability zone for the default Cinder CSI storage class
azimuth_capi_operator_capi_helm_csi_cinder_default_availability_zone: nova
# The Cinder volume type for the default Cinder CSI storage class
azimuth_capi_operator_capi_helm_csi_cinder_default_volume_type:

azimuth_capi_operator_capi_helm_values_defaults:
  kubeNetwork:
    pods: >-
      {{-
        { "cidrBlocks": [azimuth_capi_operator_capi_helm_pods_cidr] }
        if azimuth_capi_operator_capi_helm_pods_cidr
        else {}
      }}
    services: >-
      {{-
        { "cidrBlocks": [azimuth_capi_operator_capi_helm_services_cidr] }
        if azimuth_capi_operator_capi_helm_services_cidr
        else {}
      }}
  clusterNetworking: >-
    {{-
      {} |
        combine(
          { "externalNetworkId": azimuth_capi_operator_external_network_id }
          if azimuth_capi_operator_external_network_id
          else {}
        ) |
        combine(
          { "dnsNameservers": azimuth_capi_operator_capi_helm_dns_nameservers }
          if azimuth_capi_operator_capi_helm_dns_nameservers
          else {}
        )
    }}
  trustedCAs: "{{ azimuth_capi_operator_capi_helm_trust_bundle }}"
  registryMirrors: "{{ azimuth_capi_operator_capi_helm_registry_mirrors }}"
  additionalPackages: "{{ azimuth_capi_operator_capi_helm_additional_packages }}"
  controlPlane:
    omitFailureDomain: "{{ azimuth_capi_operator_capi_helm_control_plane_omit_failure_domain }}"
    failureDomains: "{{ azimuth_capi_operator_capi_helm_control_plane_failure_domains }}"
    machineRootVolume: >-
      {{-
        (
          { "diskSize": azimuth_capi_operator_capi_helm_control_plane_root_volume_size } |
            combine(
              { "volumeType": azimuth_capi_operator_capi_helm_control_plane_root_volume_type }
              if azimuth_capi_operator_capi_helm_control_plane_root_volume_type
              else {}
            ) |
            combine(
              { "availabilityZone": azimuth_capi_operator_capi_helm_control_plane_root_volume_availability_zone }
              if azimuth_capi_operator_capi_helm_control_plane_root_volume_availability_zone
              else {}
            )
        )
        if azimuth_capi_operator_capi_helm_control_plane_root_volume_size
        else None
      }}
  nodeGroupDefaults:
    failureDomain: "{{ azimuth_capi_operator_capi_helm_worker_failure_domain }}"
    machineRootVolume: >-
      {{-
        (
          { "diskSize": azimuth_capi_operator_capi_helm_worker_root_volume_size } |
            combine(
              { "volumeType": azimuth_capi_operator_capi_helm_worker_root_volume_type }
              if azimuth_capi_operator_capi_helm_worker_root_volume_type
              else {}
            ) |
            combine(
              { "availabilityZone": azimuth_capi_operator_capi_helm_worker_root_volume_availability_zone }
              if azimuth_capi_operator_capi_helm_worker_root_volume_availability_zone
              else {}
            )
        )
        if azimuth_capi_operator_capi_helm_worker_root_volume_size
        else None
      }}
  addons:
    # Configure the CSI Cinder storage class
    openstack:
      csiCinder:
        storageClass: >-
          {{-
            { "availabilityZone": azimuth_capi_operator_capi_helm_csi_cinder_default_availability_zone } |
              combine(
                { "volumeType": azimuth_capi_operator_capi_helm_csi_cinder_default_volume_type }
                if azimuth_capi_operator_capi_helm_csi_cinder_default_volume_type
                else {}
              )
          }}

# Overrides for the CAPI Helm chart releases for all clusters
azimuth_capi_operator_capi_helm_values_overrides: {}
# Default values for the CAPI Helm chart releases for all clusters
azimuth_capi_operator_capi_helm_values: >-
  {{-
    azimuth_capi_operator_capi_helm_values_defaults |
      combine(azimuth_capi_operator_capi_helm_values_overrides, recursive = True)
  }}


# The Zenith registrar admin URL for Zenith support
# If not given, Zenith support is not enabled
azimuth_capi_operator_zenith_registrar_admin_url: >-
  {{-
    azimuth_apps_registrar_admin_url
    if azimuth_apps_registrar_admin_url is defined
    else (
      zenith_registrar_admin_url
      if zenith_registrar_admin_url is defined
      else None
    )
  }}
# The host and port for the Zenith SSHD server
azimuth_capi_operator_zenith_sshd_host: >-
  {{-
    azimuth_apps_sshd_host
    if azimuth_apps_sshd_host is defined
    else (
      zenith_sshd_host
      if zenith_sshd_host is defined
      else None
    )
  }}
azimuth_capi_operator_zenith_sshd_port: >-
  {{-
    azimuth_apps_sshd_port
    if azimuth_apps_sshd_port is defined
    else (
      zenith_sshd_port
      if zenith_sshd_port is defined
      else 22
    )
  }}
# The Zenith chart repository and version to use for rendering API server manifests
# Leave blank for the operator defaults
azimuth_capi_operator_zenith_chart_repo:
azimuth_capi_operator_zenith_chart_version:

# The repo, chart name and version for the Kubeapps installations
# Leave blank for the operator defaults
azimuth_capi_operator_kubeapps_chart_repo:
azimuth_capi_operator_kubeapps_chart_name:
azimuth_capi_operator_kubeapps_chart_version:
# The namespace for the kubeapps release
# Leave blank for the operator default
azimuth_capi_operator_kubeapps_release_namespace:

# The initial Helm repositories to add to the kubeapps installations
# By default, we use the Azimuth charts
azimuth_capi_operator_kubeapps_initial_repos:
  - name: azimuth-charts
    url: https://stackhpc.github.io/azimuth-charts
# The values to use for the release
azimuth_capi_operator_kubeapps_release_defaults:
  apprepository: >-
    {{-
      { "initialRepos": azimuth_capi_operator_kubeapps_initial_repos }
      if azimuth_capi_operator_kubeapps_initial_repos
      else {}
    }}
azimuth_capi_operator_kubeapps_release_overrides: {}
azimuth_capi_operator_kubeapps_release_values: >-
  {{-
    azimuth_capi_operator_kubeapps_release_defaults |
      combine(azimuth_capi_operator_kubeapps_release_overrides, recursive = True)
  }}

# The values for the release
azimuth_capi_operator_release_defaults:
  config:
    capiHelm: >-
      {{-
        { "defaultValues": azimuth_capi_operator_capi_helm_values } |
          combine(
            { "chartRepository": azimuth_capi_operator_capi_helm_chart_repo }
            if azimuth_capi_operator_capi_helm_chart_repo
            else {}
          ) |
          combine(
            { "chartName": azimuth_capi_operator_capi_helm_chart_name }
            if azimuth_capi_operator_capi_helm_chart_name
            else {}
          ) |
          combine(
            { "chartVersion": azimuth_capi_operator_capi_helm_chart_version }
            if azimuth_capi_operator_capi_helm_chart_version
            else {}
          )
      }}
    zenith: >-
      {{-
        {} |
          combine(
            {
              "registrarAdminUrl": azimuth_capi_operator_zenith_registrar_admin_url,
              "sshdHost": azimuth_capi_operator_zenith_sshd_host,
              "sshdPort": azimuth_capi_operator_zenith_sshd_port,
            }
            if azimuth_capi_operator_zenith_registrar_admin_url
            else {}
          ) |
          combine(
            { "chartRepository": azimuth_capi_operator_zenith_chart_repo }
            if azimuth_capi_operator_zenith_chart_repo
            else {}
          ) |
          combine(
            { "chartVersion": azimuth_capi_operator_zenith_chart_version }
            if azimuth_capi_operator_zenith_chart_version
            else {}
          )
      }}
    kubeapps: >-
      {{-
        { "releaseValues": azimuth_capi_operator_kubeapps_release_values } |
          combine(
            { "chartRepository": azimuth_capi_operator_kubeapps_chart_repo }
            if azimuth_capi_operator_kubeapps_chart_repo
            else {}
          ) |
          combine(
            { "chartName": azimuth_capi_operator_kubeapps_chart_name }
            if azimuth_capi_operator_kubeapps_chart_name
            else {}
          ) |
          combine(
            { "chartVersion": azimuth_capi_operator_kubeapps_chart_version }
            if azimuth_capi_operator_kubeapps_chart_version
            else {}
          ) |
          combine(
            { "releaseNamespace": azimuth_capi_operator_kubeapps_release_namespace }
            if azimuth_capi_operator_kubeapps_release_namespace
            else {}
          )
      }}
azimuth_capi_operator_release_overrides: {}
azimuth_capi_operator_release_values: >-
  {{-
    azimuth_capi_operator_release_defaults |
      combine(azimuth_capi_operator_release_overrides, recursive = True)
  }}

#####
# Kubernetes template definitions
#
# These definitions represent the CURRENT Kubernetes templates
# All other templates will be marked as DEPRECATED
# azimuth-ops currently never removes templates
#####
# By default use the community images
azimuth_capi_operator_kube_1_22_12_image: >-
  {{-
    community_images_image_ids.kube_1_22_12
    if (
      community_images_image_ids is defined and
      'kube_1_22_12' in community_images_image_ids
    )
    else undef(hint = 'azimuth_capi_operator_kube_1_22_12_image is required')
  }}
azimuth_capi_operator_kube_1_23_9_image: >-
  {{-
    community_images_image_ids.kube_1_23_9
    if (
      community_images_image_ids is defined and
      'kube_1_23_9' in community_images_image_ids
    )
    else undef(hint = 'azimuth_capi_operator_kube_1_23_9_image is required')
  }}
azimuth_capi_operator_kube_1_24_2_image: >-
  {{-
    community_images_image_ids.kube_1_24_2
    if (
      community_images_image_ids is defined and
      'kube_1_24_2' in community_images_image_ids
    )
    else undef(hint = 'azimuth_capi_operator_kube_1_24_2_image is required')
  }}
# By default, make templates for the latest patch versions of the supported Kubernetes releases
azimuth_capi_operator_cluster_templates_default:
  kube-1-22-12:
    label: v1.22.12
    description: Kubernetes 1.22.12 with HA control plane.
    values:
      global:
        kubernetesVersion: 1.22.12
      machineImageId: "{{ azimuth_capi_operator_kube_1_22_12_image }}"
      clusterNetworking:
        internalNetwork:
          networkFilter:
            tags: portal-internal
  kube-1-23-9:
    label: v1.23.9
    description: Kubernetes 1.23.9 with HA control plane.
    values:
      global:
        kubernetesVersion: 1.23.9
      machineImageId: "{{ azimuth_capi_operator_kube_1_23_9_image }}"
      clusterNetworking:
        internalNetwork:
          networkFilter:
            tags: portal-internal
  kube-1-24-2:
    label: v1.24.2
    description: Kubernetes 1.24.2 with HA control plane.
    values:
      global:
        kubernetesVersion: 1.24.2
      machineImageId: "{{ azimuth_capi_operator_kube_1_24_2_image }}"
      clusterNetworking:
        internalNetwork:
          networkFilter:
            tags: portal-internal
# Allow extra templates to be defined using a separate variable
azimuth_capi_operator_cluster_templates_extra: {}
# The full list of Kubernetes cluster templates to install
azimuth_capi_operator_cluster_templates: >-
  {{-
    azimuth_capi_operator_cluster_templates_default |
      combine(azimuth_capi_operator_cluster_templates_extra, recursive = True)
  }}
