---

- name: Install clusterctl binary
  get_url:
    url: "{{ clusterctl_binary_url }}"
    dest: /usr/bin/clusterctl
    force: yes
    mode: u=rwx,g=rx,o=rx

- name: Check for existing Cluster API installation
  command: kubectl -n capi-system get deploy capi-controller-manager
  register: clusterapi_exists
  changed_when: false
  failed_when: "clusterapi_exists.rc != 0 and 'NotFound' not in clusterapi_exists.stderr"

- name: Initialise Cluster API providers
  command: >-
    clusterctl init --wait-providers
    {%- if capi_core_provider %}
      --core {{ capi_core_provider }}
    {%- endif %}
    {%- if capi_bootstrap_providers %}
      --bootstrap {{ capi_bootstrap_providers | join(',') }}
    {%- endif %}
    {%- if capi_control_plane_providers %}
      --control-plane {{ capi_control_plane_providers | join(',') }}
    {%- endif %}
    {%- if capi_infrastructure_providers %}
      --infrastructure {{ capi_infrastructure_providers | join(',') }}
    {%- endif %}
  when: clusterapi_exists.rc != 0

- name: Check if upgrades are available for Cluster API providers
  command: clusterctl upgrade plan
  register: clusterctl_upgrade_plan
  changed_when: false

- name: Upgrade Cluster API providers
  command: >-
    {{
      clusterctl_upgrade_plan.stdout |
        regex_search("clusterctl upgrade apply --contract [a-z0-9]+")
    }}
  when: "'You are already up to date!' not in clusterctl_upgrade_plan.stdout"
