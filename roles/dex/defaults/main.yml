---

# The chart to use
dex_chart_name: dex
dex_chart_repo: https://charts.dexidp.io
dex_chart_version: 0.12.1

# The namespace and name for the release
dex_release_namespace: dex-system
dex_release_name: dex

# The timeout for the release
dex_wait_timeout: 10m

# Details for the Dex ingress
#   The name of the ingress
dex_ingress_name: "{{ dex_name }}"
#   The name of the ingress class to use
dex_ingress_class: nginx
#   The hostname to use for the ingress resource
dex_ingress_host: >-
  {{-
    "{}.{}".format(ingress_dex_subdomain, ingress_base_domain)
    if ingress_dex_subdomain is defined and ingress_base_domain is defined
    else undef(hint = 'dex_ingress_host is required')
  }}
#   Any default annotations for the ingress
dex_ingress_annotations_defaults: "{{ ingress_annotations | default({}) }}"
#   Any extra annotations for the ingress
dex_ingress_annotations_overrides: {}
#   Indicates whether TLS should be enabled
dex_ingress_tls_enabled: "{{ ingress_tls_enabled | default(True) }}"
#   The TLS secret name (can be null)
dex_ingress_tls_secret_name: "{{ ingress_tls_secret_name | default('keycloak-tls', True) }}"
#   Any TLS-specific annotations
dex_ingress_tls_annotations: "{{ ingress_tls_annotations | default({}) }}"
#   Wildcard TLS certificate, if available
dex_ingress_tls_certificate: "{{ ingress_tls_wildcard_certificate | default(None) }}"
dex_ingress_tls_key: >-
  {{-
    ingress_tls_wildcard_key
    if ingress_tls_wildcard_key is defined
    else undef(hint = 'dex_ingress_tls_key is required')
  }}
#   The overall annotations for the the ingress
dex_ingress_annotations: >-
  {{-
    dex_ingress_annotations_defaults |
      combine(
        dex_ingress_tls_annotations
        if dex_ingress_tls_enabled and not dex_ingress_tls_certificate
        else {}
      ) |
      combine(dex_ingress_annotations_overrides)
  }}

# The values for the release
_dex_issuer_protocol: "{{ 'https' if dex_ingress_tls_enabled else 'http' }}"
dex_release_defaults:
  config:
    issuer: "{{ _dex_issuer_protocol }}://{{ dex_ingress_host }}"
    storage:
      type: kubernetes
      config:
        inCluster: true
    connectors:
      - id: azimuth
        type: authproxy
        name: Azimuth
        config:
          userHeader: X-Remote-User
          groupHeader: X-Remote-Group
  ingress:
    enabled: true
    className: "{{ dex_ingress_class }}"
    hosts:
      - host: "{{ dex_ingress_host }}"
        paths:
          - path: /
            pathType: Prefix
    tls: >-
      {{-
        [
          {
            "hosts": [dex_ingress_host],
            "secretName": dex_ingress_tls_secret_name,
          },
        ]
        if dex_ingress_tls_enabled
        else []
      }}
    
dex_release_overrides: {}
dex_release_values: >-
  {{-
    dex_release_defaults |
      combine(dex_release_overrides, recursive = True)
  }}
